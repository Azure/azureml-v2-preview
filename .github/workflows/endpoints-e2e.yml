name: cli-endpoint

on: 
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
jobs:
  dev-setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.3
    - name: Setup Python
      uses: actions/setup-python@v2.1.4
      with:
        python-version: 3.7
    - run: |
        az extension add --source https://azuremlsdktestpypi.blob.core.windows.net/wheels/sdk-cli-v2/ml-0.0.15-py3-none-any.whl --pip-extra-index-urls https://azuremlsdktestpypi.azureedge.net/sdk-cli-v2 -y
    - run: az ml -h  
    - run: az ml endpoint -h
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_TOKEN}}
    - run: |
          az config set defaults.workspace=e2edemos
          az config set defaults.group=demorg
          az account set -s 92c76a2f-0e1c-4216-b65e-abf7a3f34c1e
    
    # E2E flow#1: Simple deploy flow
    - run: |
          # Step 1: Deploy simple endpoint
          az ml endpoint create --file examples/endpoints/online/managed/simple-flow/1-create-endpoint-with-blue.yaml --wait
          # Get the state of endpoint/deployment along with the status
          az ml endpoint show --name my-endpoint
          # Step 2: Now test the endpoint
          az ml endpoint invoke --name my-endpoint --request-file examples/endpoints/online/model-1/sample-request.json
          # Step 3: Check the container logs
          az ml endpoint log --name my-endpoint --deployment blue --tail 100
          # az ml endpoint delete --name my-endpoint

    # E2E flow#2: Declarative canary flow
    - run: |
          # Step 2: Scale the blue deployment to handle additional traffic
          az ml endpoint update --file examples/endpoints/online/managed/canary-declarative-flow/2-scale-blue.yaml --wait
          # Step 3: Deploy a new model (green) to the endpoint, but taking NO live traffic yet
          az ml endpoint update --file examples/endpoints/online/managed/canary-declarative-flow/3-create-green.yaml --wait
          # Test the deployment
          az ml endpoint invoke --name my-endpoint --deployment green --request-file examples/endpoints/online/model-2/sample-request.json
          # Step 4: Test the green deployment with a small percentage of the live traffic
          az ml endpoint update --file examples/endpoints/online/managed/canary-declarative-flow/4-flight-green.yaml --wait
          # Step 5: Let the green deployment take on the full traffic
          az ml endpoint update --file examples/endpoints/online/managed/canary-declarative-flow/5-full-green.yaml --wait
          # Step 6: Now since green is working fine, lets delete the blue deployment
          az ml endpoint update --file examples/endpoints/online/managed/canary-declarative-flow/6-delete-blue.yaml --wait
          Step 7: Cleanup - delete the endpoint
          az ml endpoint delete --name my-endpoint

    # E2E flow#3 Imperative canary flow
    - run: |
          az ml endpoint create --file examples/endpoints/online/managed/canary-imperative-flow/1-create-endpoint.yaml --wait
          az ml endpoint update  --name my-new-endpoint --deployment blue --deployment-file examples/endpoints/online/managed/canary-imperative-flow/2-create-blue.yaml --wait
          az ml endpoint update --name my-new-endpoint --traffic "blue:100" --wait
          az ml endpoint invoke --name my-new-endpoint --request-file examples/endpoints/online/model-1/sample-request.json
          az ml endpoint update --name my-new-endpoint --deployment blue --instance-count 2 --wait
          az ml endpoint update  --name my-new-endpoint --deployment-file examples/endpoints/online/managed/canary-imperative-flow/3-create-green.yaml --wait
          az ml endpoint invoke --name my-new-endpoint --deployment green --request-file examples/endpoints/online/model-2/sample-request.json
          az ml endpoint update --name my-new-endpoint --traffic "blue:90,green:10" --wait
          az ml endpoint update --name my-new-endpoint --traffic "blue:0,green:100" --wait
          az ml endpoint delete --name my-new-endpoint --deployment blue
          az ml endpoint delete --name my-new-endpoint
