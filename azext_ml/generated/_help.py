# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['ml endpoint'] = """
    type: group
    short-summary: ml endpoint
"""

helps['ml endpoint list'] = """
    type: command
    short-summary: "Lists Batch inference endpoint in the workspace."
"""

helps['ml endpoint show'] = """
    type: command
    short-summary: "Gets a batch inference endpoint by name."
"""

helps['ml endpoint create'] = """
    type: command
    short-summary: "Creates a batch inference endpoint."
    parameters:
      - name: --system-data
        short-summary: "Azure Resource Manager resource Envelope"
        long-summary: |
            Usage: --system-data created-at=XX created-by=XX created-by-type=XX last-modified-at=XX \
last-modified-by=XX last-modified-by-type=XX

            created-at: the timestamp of resource creation (UTC)
            created-by: a string identifier for the identity that created the resource
            created-by-type: the type of identity that created the resource: user, application, managedIdentity, key
            last-modified-at: the timestamp of resource last modification (UTC)
            last-modified-by: a string identifier for the identity that last modified the resource
            last-modified-by-type: the type of identity that last modified the resource: user, application, \
managedIdentity, key
      - name: --keys
        long-summary: |
            Usage: --keys primary-key=XX secondary-key=XX

            primary-key: The primary key.
            secondary-key: The secondary key.
"""

helps['ml endpoint update'] = """
    type: command
    short-summary: "Update a batch inference endpoint."
    parameters:
      - name: --system-data
        short-summary: "Azure Resource Manager resource Envelope"
        long-summary: |
            Usage: --system-data created-at=XX created-by=XX created-by-type=XX last-modified-at=XX \
last-modified-by=XX last-modified-by-type=XX

            created-at: the timestamp of resource creation (UTC)
            created-by: a string identifier for the identity that created the resource
            created-by-type: the type of identity that created the resource: user, application, managedIdentity, key
            last-modified-at: the timestamp of resource last modification (UTC)
            last-modified-by: a string identifier for the identity that last modified the resource
            last-modified-by-type: the type of identity that last modified the resource: user, application, \
managedIdentity, key
      - name: --keys
        long-summary: |
            Usage: --keys primary-key=XX secondary-key=XX

            primary-key: The primary key.
            secondary-key: The secondary key.
"""

helps['ml endpoint delete'] = """
    type: command
    short-summary: "Delete Batch Inference Endpoint."
"""

helps['ml endpoint list-key'] = """
    type: command
    short-summary: "Lists batch Inference Endpoint keys."
"""

helps['ml datastore'] = """
    type: group
    short-summary: ml datastore
"""

helps['ml datastore list'] = """
    type: command
    short-summary: "List datastores."
"""

helps['ml datastore show'] = """
    type: command
    short-summary: "Get datastore."
"""

helps['ml datastore create'] = """
    type: command
    short-summary: "Create datastore."
    parameters:
      - name: --system-data
        short-summary: "Azure Resource Manager resource Envelope"
        long-summary: |
            Usage: --system-data created-at=XX created-by=XX created-by-type=XX last-modified-at=XX \
last-modified-by=XX last-modified-by-type=XX

            created-at: the timestamp of resource creation (UTC)
            created-by: a string identifier for the identity that created the resource
            created-by-type: the type of identity that created the resource: user, application, managedIdentity, key
            last-modified-at: the timestamp of resource last modification (UTC)
            last-modified-by: a string identifier for the identity that last modified the resource
            last-modified-by-type: the type of identity that last modified the resource: user, application, \
managedIdentity, key
      - name: --linked-info
        long-summary: |
            Usage: --linked-info linked-id=XX linked-resource-name=XX

            linked-id: Linked service ID.
            linked-resource-name: Linked service resource name.
"""

helps['ml datastore update'] = """
    type: command
    short-summary: "Update datastore."
    parameters:
      - name: --system-data
        short-summary: "Azure Resource Manager resource Envelope"
        long-summary: |
            Usage: --system-data created-at=XX created-by=XX created-by-type=XX last-modified-at=XX \
last-modified-by=XX last-modified-by-type=XX

            created-at: the timestamp of resource creation (UTC)
            created-by: a string identifier for the identity that created the resource
            created-by-type: the type of identity that created the resource: user, application, managedIdentity, key
            last-modified-at: the timestamp of resource last modification (UTC)
            last-modified-by: a string identifier for the identity that last modified the resource
            last-modified-by-type: the type of identity that last modified the resource: user, application, \
managedIdentity, key
      - name: --linked-info
        long-summary: |
            Usage: --linked-info linked-id=XX linked-resource-name=XX

            linked-id: Linked service ID.
            linked-resource-name: Linked service resource name.
"""

helps['ml datastore delete'] = """
    type: command
    short-summary: "Delete datastore."
"""

helps['ml datastore list-secret'] = """
    type: command
    short-summary: "Get datastore secrets."
"""

helps['ml job'] = """
    type: group
    short-summary: ml job
"""

helps['ml job list'] = """
    type: command
    short-summary: "Lists Jobs in the workspace."
"""

helps['ml job show'] = """
    type: command
    short-summary: "Gets a Job by name/id."
"""

helps['ml job create'] = """
    type: command
    short-summary: "Creates and executes a Job."
    parameters:
      - name: --system-data
        short-summary: "Azure Resource Manager resource Envelope"
        long-summary: |
            Usage: --system-data created-at=XX created-by=XX created-by-type=XX last-modified-at=XX \
last-modified-by=XX last-modified-by-type=XX

            created-at: the timestamp of resource creation (UTC)
            created-by: a string identifier for the identity that created the resource
            created-by-type: the type of identity that created the resource: user, application, managedIdentity, key
            last-modified-at: the timestamp of resource last modification (UTC)
            last-modified-by: a string identifier for the identity that last modified the resource
            last-modified-by-type: the type of identity that last modified the resource: user, application, \
managedIdentity, key
"""

helps['ml job update'] = """
    type: command
    short-summary: "Update and executes a Job."
    parameters:
      - name: --system-data
        short-summary: "Azure Resource Manager resource Envelope"
        long-summary: |
            Usage: --system-data created-at=XX created-by=XX created-by-type=XX last-modified-at=XX \
last-modified-by=XX last-modified-by-type=XX

            created-at: the timestamp of resource creation (UTC)
            created-by: a string identifier for the identity that created the resource
            created-by-type: the type of identity that created the resource: user, application, managedIdentity, key
            last-modified-at: the timestamp of resource last modification (UTC)
            last-modified-by: a string identifier for the identity that last modified the resource
            last-modified-by-type: the type of identity that last modified the resource: user, application, \
managedIdentity, key
"""

helps['ml job delete'] = """
    type: command
    short-summary: "Deletes a Job."
"""

helps['ml job cancel'] = """
    type: command
    short-summary: "Cancels a Job."
"""

helps['ml workspace'] = """
    type: group
    short-summary: ml workspace
"""

helps['ml workspace list'] = """
    type: command
    short-summary: "Lists all the available machine learning workspaces under the specified resource group. And Lists \
all the available machine learning workspaces under the specified subscription."
"""

helps['ml workspace show'] = """
    type: command
    short-summary: "Gets the properties of the specified machine learning workspace."
"""

helps['ml workspace create'] = """
    type: command
    short-summary: "Create a workspace with the specified parameters."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
      - name: --shared-private-link-resources
        short-summary: "The list of shared private link resources in this workspace."
        long-summary: |
            Usage: --shared-private-link-resources name=XX private-link-resource-id=XX group-id=XX request-message=XX \
status=XX

            name: Unique name of the private link.
            private-link-resource-id: The resource id that private link links to.
            group-id: The private link resource group id.
            request-message: Request message.
            status: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.

            Multiple actions can be specified by using more than one --shared-private-link-resources argument.
      - name: --encryption-key-vault-properties
        short-summary: "Customer Key vault properties."
        long-summary: |
            Usage: --encryption-key-vault-properties key-vault-arm-id=XX key-identifier=XX identity-client-id=XX

            key-vault-arm-id: Required. The ArmId of the keyVault where the customer owned encryption key is present.
            key-identifier: Required. Key vault uri to access the encryption key.
            identity-client-id: For future use - The client id of the identity which will be used to access key vault.
"""

helps['ml workspace update'] = """
    type: command
    short-summary: "Updates a machine learning workspace with the specified parameters."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
"""

helps['ml workspace delete'] = """
    type: command
    short-summary: "Deletes a machine learning workspace."
"""

helps['ml workspace list-key'] = """
    type: command
    short-summary: "Lists all the keys associated with this workspace. This includes keys for the storage account, app \
insights and password for container registry."
"""

helps['ml workspace resync-key'] = """
    type: command
    short-summary: "Resync all the keys associated with this workspace. This includes keys for the storage account, \
app insights and password for container registry."
"""

helps['ml workspace wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the ml workspace is met.
    examples:
      - name: Pause executing next line of CLI script until the ml workspace is successfully created.
      - name: Pause executing next line of CLI script until the ml workspace is successfully deleted.
"""

helps['ml usage'] = """
    type: group
    short-summary: ml usage
"""

helps['ml usage list'] = """
    type: command
    short-summary: "Gets the current usage information as well as limits for AML resources for given subscription and \
location."
"""

helps['ml vm-size'] = """
    type: group
    short-summary: ml vm-size
"""

helps['ml vm-size list'] = """
    type: command
    short-summary: "Returns supported VM Sizes in a location."
"""

helps['ml compute quota'] = """
    type: group
    short-summary: ml compute quota
"""

helps['ml compute quota list'] = """
    type: command
    short-summary: "Gets the currently assigned Workspace Quotas based on VMFamily."
"""

helps['ml compute quota update'] = """
    type: command
    short-summary: "Update quota for each VM family in workspace."
    parameters:
      - name: --value
        short-summary: "The list for update quota."
        long-summary: |
            Usage: --value id=XX type=XX limit=XX unit=XX

            id: Specifies the resource ID.
            type: Specifies the resource type.
            limit: The maximum permitted quota of the resource.
            unit: An enum describing the unit of quota measurement.

            Multiple actions can be specified by using more than one --value argument.
"""

helps['ml compute'] = """
    type: group
    short-summary: ml compute
"""

helps['ml compute list'] = """
    type: command
    short-summary: "Gets computes in specified workspace."
"""

helps['ml compute show'] = """
    type: command
    short-summary: "Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not \
returned - use 'keys' nested resource to get them."
"""

helps['ml machine-learning-compute aks'] = """
    type: group
    short-summary: ml compute sub group aks
"""

helps['ml compute aks create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
"""

helps['ml machine-learning-compute aml-compute'] = """
    type: group
    short-summary: ml compute sub group aml-compute
"""

helps['ml compute aml-compute create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
"""

helps['ml machine-learning-compute data-factory'] = """
    type: group
    short-summary: ml compute sub group data-factory
"""

helps['ml compute data-factory create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
"""

helps['ml machine-learning-compute data-lake-analytics'] = """
    type: group
    short-summary: ml compute sub group data-lake-analytics
"""

helps['ml compute data-lake-analytics create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
"""

helps['ml machine-learning-compute databricks'] = """
    type: group
    short-summary: ml compute sub group databricks
"""

helps['ml compute databricks create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
"""

helps['ml machine-learning-compute hd-insight'] = """
    type: group
    short-summary: ml compute sub group hd-insight
"""

helps['ml compute hd-insight create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
      - name: --administrator-account
        short-summary: "Admin credentials for master node of the cluster"
        long-summary: |
            Usage: --administrator-account username=XX password=XX public-key-data=XX private-key-data=XX

            username: Username of admin account
            password: Password of admin account
            public-key-data: Public key data
            private-key-data: Private key data
"""

helps['ml machine-learning-compute virtual-machine'] = """
    type: group
    short-summary: ml compute sub group virtual-machine
"""

helps['ml compute virtual-machine create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
      - name: --administrator-account
        short-summary: "Admin credentials for virtual machine"
        long-summary: |
            Usage: --administrator-account username=XX password=XX public-key-data=XX private-key-data=XX

            username: Username of admin account
            password: Password of admin account
            public-key-data: Public key data
            private-key-data: Private key data
"""

helps['ml compute update'] = """
    type: command
    short-summary: "Updates properties of a compute. This call will overwrite a compute if it exists. This is a \
nonrecoverable operation."
    parameters:
      - name: --scale-settings
        short-summary: "Desired scale settings for the amlCompute."
        long-summary: |
            Usage: --scale-settings max-node-count=XX min-node-count=XX node-idle-time-before-scale-down=XX

            max-node-count: Required. Max number of nodes to use
            min-node-count: Min number of nodes to use
            node-idle-time-before-scale-down: Node Idle Time before scaling down amlCompute. This string needs to be \
in the RFC Format.
"""

helps['ml compute delete'] = """
    type: command
    short-summary: "Deletes specified Machine Learning compute."
"""

helps['ml compute list-key'] = """
    type: command
    short-summary: "Gets secrets related to Machine Learning compute (storage keys, service credentials, etc)."
"""

helps['ml compute list-node'] = """
    type: command
    short-summary: "Get the details (e.g IP address, port etc) of all the compute nodes in the compute."
"""

helps['ml compute wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the ml compute is met.
    examples:
      - name: Pause executing next line of CLI script until the ml compute is successfully created.
      - name: Pause executing next line of CLI script until the ml compute is successfully updated.
      - name: Pause executing next line of CLI script until the ml compute is successfully deleted.
"""

helps['ml sku'] = """
    type: group
    short-summary: ml sku
"""

helps['ml sku list'] = """
    type: command
    short-summary: "Lists all skus with associated features."
"""
